PRAGMA foreign_keys = ON;

CREATE TABLE users (
  _id TEXT NOT NULL,
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  app_id TEXT NOT NULL,
  name TEXT NOT NULL,
  UNIQUE (_id, app_id)
);

CREATE TABLE pins (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  app_id TEXT NOT NULL,
  user_id TEXT NOT NULL,
  _path TEXT NOT NULL,
  path TEXT NOT NULL,
  w REAL NOT NULL,
  _x REAL NOT NULL,
  x REAL NOT NULL,
  _y REAL NOT NULL,
  y REAL NOT NULL,
  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  completed_at INTEGER,
  completed_by_id TEXT,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (completed_by_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE comments (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  pin_id INTEGER,
  user_id TEXT NOT NULL,
  text TEXT NOT NULL,
  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (pin_id) REFERENCES pins(id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TRIGGER updated_at
AFTER UPDATE ON comments
FOR EACH ROW
BEGIN
  UPDATE comments
  SET updated_at = CURRENT_TIMESTAMP
  WHERE id = OLD.id;
END;
